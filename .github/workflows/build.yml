name: build
on: push

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          submodules: recursive
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version-file: .node-version
          cache: npm
      - run: npm ci --ignore-scripts
      - run: npm run build
        env:
          JOBS: 3
          ZSTD_NAPI_ENABLE_GCOV: 1
      - run: npm run test-coverage
      - name: Submit coverage data to Codecov
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          gcov: true
          token: ${{ secrets.CODECOV_TOKEN }}
      - run: ./node_modules/.bin/tsc -p tsconfig.emit.json
      - id: npm_pack
        name: Build npm package
        run: echo "package=$(npm pack)" >> "$GITHUB_OUTPUT"
      - name: Upload NPM package
        uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4.0.0
        with:
          name: package
          path: ${{ steps.npm_pack.outputs.package }}

  other-node-versions:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node: [14, 16, 20, 21]
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          submodules: recursive
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: ${{ matrix.node }}
          cache: npm
      - run: npm ci --ignore-scripts
      - run: npm run build
        env:
          JOBS: 3
      - run: npm run test

  other-ts-versions:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          submodules: recursive
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version-file: .node-version
          cache: npm
      - run: npm ci --ignore-scripts
      - run: |
          for version in 4.5 4.6 4.7 4.8 4.9 5.0 5.1 5.2 5.3; do
            echo "=== Typescript ${version} ==="
            npx -y --package=typescript@$version -- tsc -p tsconfig.old-ts.json
          done

  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          submodules: recursive
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version-file: .node-version
          cache: npm
      - run: npm ci --ignore-scripts
      - run: npm run lint
      - name: Check JS/TS is formatted with Prettier
        run: ./node_modules/.bin/prettier --check '**/*.{js,json,ts}'
      - name: Check C++ is formatted with clang-format
        run: |
          clang-format-14 -i src/*
          git diff --stat --exit-code src/
